version: '3'
services:
  zookeeper:
    container_name: 'storeo-zookeeper'
    hostname: 'storeo-zookeeper'
    image: debezium/zookeeper:latest
    restart: always
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"
  kafka:
    container_name: 'storeo-kafka'
    hostname: 'storeo-kafka'
    image: debezium/kafka:latest
    restart: always
    ports:
      - "9092:9092"
    links:
      - zookeeper
    environment:
      - ZOOKEEPER_CONNECT=zookeeper:2181
      - CREATE_TOPICS=storeo-events:10:1
  connect:
    container_name: 'storeo-connect'
    hostname: 'storeo-connect'
    image: minhdtb/storeo-connect:1.1
    restart: always
    ports:
      - "8083:8083"
    links:
      - kafka
      - db
    environment:
      - KAFKA_LOG4J_OPTS=-Dlog4j.configuration=file:/opt/kafka/config/connect-log4j.properties
      - KAFKA_CONNECT_BOOTSTRAP_SERVERS=kafka:9092
      - |
        KAFKA_CONNECT_CONFIGURATION=
        key.converter=org.apache.kafka.connect.json.JsonConverter
        value.converter=org.apache.kafka.connect.json.JsonConverter
        key.converter.schemas.enable=false
        value.converter.schemas.enable=false
        group.id=connect
        offset.storage.topic=connect-offsets
        offset.storage.replication.factor=1
        config.storage.topic=connect-configs
        config.storage.replication.factor=1
        status.storage.topic=connect-status
        status.storage.replication.factor=1
  db:
    container_name: 'storeo-db'
    hostname: 'storeo-db'
    image: debezium/postgres:11
    restart: always
    ports:
      - "5432:5432"
    healthcheck:
      test: pg_isready -U postgresuser -d orderdb
      interval: 2s
      timeout: 20s
      retries: 10
    environment:
      POSTGRES_DB: storeo
      POSTGRES_USER: storeo
      POSTGRES_PASSWORD: storeo
    volumes:
      - storeo-db:/var/lib/postgresql/data
  es:
    container_name: 'storeo-es'
    hostname: 'storeo-es'
    image: elasticsearch:7.9.0
    restart: always
    volumes:
      - storeo-es:/usr/share/elasticsearch/data
    environment:
      - ES_JAVA_OPTS=-Xms128m -Xmx512m
      - cluster.name=storeo-cluster
      - discovery.type=single-node
    ports:
      - "9200:9200"
      - "9300:9300"
  kibana:
    container_name: 'storeo-kibana'
    hostname: 'storeo-kibana'
    image: kibana:7.9.0
    restart: always
    environment:
      - ELASTICSEARCH_HOSTS=http://es:9200
    ports:
      - "5601:5601"
  gateway:
    container_name: 'storeo-gateway'
    hostname: 'storeo-gateway'
    image: minhdtb/graphql-mesh:latest
    restart: always
    volumes:
      - "./storeo-gateway/.meshrc.yaml:/work/.meshrc.yaml"
    network_mode: "host"

volumes:
  storeo-db:
  storeo-es:
